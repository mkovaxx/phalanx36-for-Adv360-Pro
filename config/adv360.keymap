#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt { flavor = "tap-unless-interrupted"; };

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hml: homerow_mod_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD_LT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <1000>;
            flavor = "balanced";
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 39 40 41 42 43 44 45 54 55 56 57 58 59 71 72 73 74 75 37 38 53 68 69 70>;
            hold-trigger-on-release;
        };

        hmr: homerow_mod_rt {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD_RT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <1000>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67>;
            hold-trigger-on-release;
        };

        esc_caps_dance: esc_caps_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "ESC_CAPS_DANCE";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE>, <&kp CAPSLOCK>;
        };

        bt_usb_clr: bt_usb_clr {
            compatible = "zmk,behavior-hold-tap";
            label = "BT_USB_CLR";
            #binding-cells = <2>;
            tapping-term-ms = <5000>;
            bindings = <&bt>, <&out>;

            flavor = "tap-preferred";
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none  &none            &none                &none            &none              &none  &bt BT_SEL 0                                            &bt BT_SEL 3     &none  &none               &none             &none                 &none                      &none
&none  &kp Q            &kp W                &kp E            &kp R              &none  &bt BT_SEL 1                                            &bt BT_SEL 4     &none  &kp U               &kp I             &kp O                 &kp P                      &none
&none  &hml LEFT_ALT A  &hml LEFT_CONTROL S  &hml LEFT_GUI D  &hml LEFT_SHIFT F  &none  &bt BT_SEL 2  &none      &none      &none  &none        &bt BT_CLR       &none  &hmr RIGHT_SHIFT J  &hmr RIGHT_GUI K  &hmr RIGHT_CONTROL L  &hmr RIGHT_ALT APOSTROPHE  &none
&none  &kp Z            &kp B                &kp T            &kp G              &none                           &none      &none                                &none  &kp H               &kp Y             &kp N                 &kp MINUS                  &none
&none  &esc_caps_dance  &kp X                &kp C            &kp V                     &lt 1 SPACE   &lt 2 TAB  &none      &none  &lt 2 ENTER  &lt 1 BACKSPACE         &kp M               &kp COMMA         &kp DOT               &kp DEL                    &none
            >;
        };

        symbol {
            bindings = <
&none  &none         &none                          &none                           &none                              &none  &none                                  &none  &none  &none                        &none                       &none                        &none          &none
&none  &none         &kp AT_SIGN                    &kp POUND                       &kp DOLLAR                         &none  &none                                  &none  &none  &kp AMPERSAND                &kp ASTERISK                &kp KP_PLUS                  &none          &none
&none  &kp LEFT_ALT  &hml LEFT_CONTROL EXCLAMATION  &hml LEFT_GUI LEFT_PARENTHESIS  &hml LEFT_SHIFT RIGHT_PARENTHESIS  &none  &none  &none  &none      &none  &none  &none  &none  &hmr RIGHT_SHIFT LEFT_BRACE  &hmr RIGHT_GUI RIGHT_BRACE  &hmr RIGHT_CONTROL KP_EQUAL  &kp RIGHT_ALT  &none
&none  &none         &kp GRAVE                      &kp LEFT_BRACKET                &kp RIGHT_BRACKET                  &none                &none      &none                &none  &kp PIPE                     &kp CARET                   &kp QUESTION                 &none          &none
&none  &none         &kp TILDE                      &kp PERCENT                     &kp BACKSLASH                             &none  &none  &none      &none  &none  &none         &kp KP_SLASH                 &kp SEMICOLON               &kp COLON                    &none          &none
            >;
        };

        nav_num {
            bindings = <
&none  &none         &none                   &none               &none                  &none  &none                                  &none  &none  &none                         &none                       &none                           &none          &none
&none  &none         &none                   &kp UP              &none                  &none  &none                                  &none  &none  &kp KP_NUMBER_7               &kp KP_NUMBER_8             &kp KP_NUMBER_9                 &none          &none
&none  &kp LEFT_ALT  &hml LEFT_CONTROL LEFT  &hml LEFT_GUI DOWN  &hml LEFT_SHIFT RIGHT  &none  &none  &none  &none      &none  &none  &none  &none  &hmr RIGHT_SHIFT KP_NUMBER_4  &hmr RIGHT_GUI KP_NUMBER_5  &hmr RIGHT_CONTROL KP_NUMBER_6  &kp RIGHT_ALT  &none
&none  &none         &kp HOME                &kp PG_UP           &kp END                &none                &none      &none                &none  &kp KP_NUMBER_1               &kp KP_NUMBER_2             &kp KP_NUMBER_3                 &none          &none
&none  &none         &none                   &kp PG_DN           &none                         &none  &none  &none      &none  &none  &none         &kp KP_NUMBER_0               &none                       &kp KP_DOT                      &none          &none
            >;
        };
    };
};
